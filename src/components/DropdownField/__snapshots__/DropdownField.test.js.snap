// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropdownField it renders dropdown field 1`] = `
<DropdownField
  error={true}
  helperText="Helper text"
  items={
    Array [
      Object {
        "label": "Dropdown item 1",
        "value": 1,
      },
      Object {
        "label": "Dropdown item 2",
        "value": "some",
      },
      Object {
        "label": "",
        "value": "next",
      },
    ]
  }
  label="Dropdown label"
  name="dropdown"
  onChange={[Function]}
  value={1}
>
  <WithStyles(ForwardRef(FormControl))
    fullWidth={true}
  >
    <ForwardRef(FormControl)
      classes={
        Object {
          "fullWidth": "MuiFormControl-fullWidth",
          "marginDense": "MuiFormControl-marginDense",
          "marginNormal": "MuiFormControl-marginNormal",
          "root": "MuiFormControl-root",
        }
      }
      fullWidth={true}
    >
      <div
        className="MuiFormControl-root MuiFormControl-fullWidth"
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="outlined-age-simple"
        >
          <ForwardRef(InputLabel)
            classes={
              Object {
                "animated": "MuiInputLabel-animated",
                "asterisk": "MuiInputLabel-asterisk",
                "disabled": "Mui-disabled",
                "error": "Mui-error",
                "filled": "MuiInputLabel-filled",
                "focused": "Mui-focused",
                "formControl": "MuiInputLabel-formControl",
                "marginDense": "MuiInputLabel-marginDense",
                "outlined": "MuiInputLabel-outlined",
                "required": "Mui-required",
                "root": "MuiInputLabel-root",
                "shrink": "MuiInputLabel-shrink",
              }
            }
            htmlFor="outlined-age-simple"
          >
            <WithStyles(ForwardRef(FormLabel))
              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
              classes={
                Object {
                  "asterisk": "MuiInputLabel-asterisk",
                  "disabled": "Mui-disabled",
                  "error": "Mui-error",
                  "focused": "Mui-focused",
                  "required": "Mui-required",
                }
              }
              data-shrink={true}
              htmlFor="outlined-age-simple"
            >
              <ForwardRef(FormLabel)
                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                classes={
                  Object {
                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                    "colorSecondary": "MuiFormLabel-colorSecondary",
                    "disabled": "Mui-disabled Mui-disabled",
                    "error": "Mui-error Mui-error",
                    "filled": "MuiFormLabel-filled",
                    "focused": "Mui-focused Mui-focused",
                    "required": "Mui-required Mui-required",
                    "root": "MuiFormLabel-root",
                  }
                }
                data-shrink={true}
                htmlFor="outlined-age-simple"
              >
                <label
                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                  data-shrink={true}
                  htmlFor="outlined-age-simple"
                >
                  Dropdown label
                </label>
              </ForwardRef(FormLabel)>
            </WithStyles(ForwardRef(FormLabel))>
          </ForwardRef(InputLabel)>
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Select))
          displayEmpty={true}
          onChange={[Function]}
          value={1}
        >
          <ForwardRef(Select)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "filled": "MuiSelect-filled",
                "icon": "MuiSelect-icon",
                "iconFilled": "MuiSelect-iconFilled",
                "iconOpen": "MuiSelect-iconOpen",
                "iconOutlined": "MuiSelect-iconOutlined",
                "outlined": "MuiSelect-outlined",
                "root": "MuiSelect-root",
                "select": "MuiSelect-select",
                "selectMenu": "MuiSelect-selectMenu",
              }
            }
            displayEmpty={true}
            onChange={[Function]}
            value={1}
          >
            <WithStyles(ForwardRef(Input))
              inputComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "propTypes": Object {
                    "IconComponent": [Function],
                    "MenuProps": [Function],
                    "SelectDisplayProps": [Function],
                    "autoFocus": [Function],
                    "autoWidth": [Function],
                    "children": [Function],
                    "className": [Function],
                    "classes": [Function],
                    "defaultValue": [Function],
                    "disabled": [Function],
                    "displayEmpty": [Function],
                    "inputRef": [Function],
                    "labelId": [Function],
                    "multiple": [Function],
                    "name": [Function],
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onClose": [Function],
                    "onFocus": [Function],
                    "onOpen": [Function],
                    "open": [Function],
                    "readOnly": [Function],
                    "renderValue": [Function],
                    "required": [Function],
                    "tabIndex": [Function],
                    "type": [Function],
                    "value": [Function],
                    "variant": [Function],
                  },
                  "render": [Function],
                }
              }
              inputProps={
                Object {
                  "IconComponent": Object {
                    "$$typeof": Symbol(react.memo),
                    "compare": null,
                    "displayName": "ArrowDropDownIcon",
                    "muiName": "SvgIcon",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                  "MenuProps": undefined,
                  "SelectDisplayProps": Object {
                    "id": undefined,
                  },
                  "autoWidth": false,
                  "children": Array [
                    <ForwardRef(WithStyles)
                      value=""
                    />,
                    Array [
                      <ForwardRef(WithStyles)
                        value={1}
                      >
                        Dropdown item 1
                      </ForwardRef(WithStyles)>,
                      <ForwardRef(WithStyles)
                        value="some"
                      >
                        Dropdown item 2
                      </ForwardRef(WithStyles)>,
                      <ForwardRef(WithStyles)
                        value="next"
                      >
                        
                      </ForwardRef(WithStyles)>,
                    ],
                  ],
                  "classes": Object {
                    "disabled": "Mui-disabled",
                    "filled": "MuiSelect-filled",
                    "icon": "MuiSelect-icon",
                    "iconFilled": "MuiSelect-iconFilled",
                    "iconOpen": "MuiSelect-iconOpen",
                    "iconOutlined": "MuiSelect-iconOutlined",
                    "outlined": "MuiSelect-outlined",
                    "root": "MuiSelect-root",
                    "select": "MuiSelect-select",
                    "selectMenu": "MuiSelect-selectMenu",
                  },
                  "displayEmpty": true,
                  "labelId": undefined,
                  "multiple": false,
                  "onClose": undefined,
                  "onOpen": undefined,
                  "open": undefined,
                  "renderValue": undefined,
                  "type": undefined,
                  "variant": "standard",
                }
              }
              onChange={[Function]}
              value={1}
            >
              <ForwardRef(Input)
                classes={
                  Object {
                    "colorSecondary": "MuiInput-colorSecondary",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "focused": "Mui-focused",
                    "formControl": "MuiInput-formControl",
                    "fullWidth": "MuiInput-fullWidth",
                    "input": "MuiInput-input",
                    "inputMarginDense": "MuiInput-inputMarginDense",
                    "inputMultiline": "MuiInput-inputMultiline",
                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                    "marginDense": "MuiInput-marginDense",
                    "multiline": "MuiInput-multiline",
                    "root": "MuiInput-root",
                    "underline": "MuiInput-underline",
                  }
                }
                inputComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "IconComponent": [Function],
                      "MenuProps": [Function],
                      "SelectDisplayProps": [Function],
                      "autoFocus": [Function],
                      "autoWidth": [Function],
                      "children": [Function],
                      "className": [Function],
                      "classes": [Function],
                      "defaultValue": [Function],
                      "disabled": [Function],
                      "displayEmpty": [Function],
                      "inputRef": [Function],
                      "labelId": [Function],
                      "multiple": [Function],
                      "name": [Function],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onClose": [Function],
                      "onFocus": [Function],
                      "onOpen": [Function],
                      "open": [Function],
                      "readOnly": [Function],
                      "renderValue": [Function],
                      "required": [Function],
                      "tabIndex": [Function],
                      "type": [Function],
                      "value": [Function],
                      "variant": [Function],
                    },
                    "render": [Function],
                  }
                }
                inputProps={
                  Object {
                    "IconComponent": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "displayName": "ArrowDropDownIcon",
                      "muiName": "SvgIcon",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                    "MenuProps": undefined,
                    "SelectDisplayProps": Object {
                      "id": undefined,
                    },
                    "autoWidth": false,
                    "children": Array [
                      <ForwardRef(WithStyles)
                        value=""
                      />,
                      Array [
                        <ForwardRef(WithStyles)
                          value={1}
                        >
                          Dropdown item 1
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="some"
                        >
                          Dropdown item 2
                        </ForwardRef(WithStyles)>,
                        <ForwardRef(WithStyles)
                          value="next"
                        >
                          
                        </ForwardRef(WithStyles)>,
                      ],
                    ],
                    "classes": Object {
                      "disabled": "Mui-disabled",
                      "filled": "MuiSelect-filled",
                      "icon": "MuiSelect-icon",
                      "iconFilled": "MuiSelect-iconFilled",
                      "iconOpen": "MuiSelect-iconOpen",
                      "iconOutlined": "MuiSelect-iconOutlined",
                      "outlined": "MuiSelect-outlined",
                      "root": "MuiSelect-root",
                      "select": "MuiSelect-select",
                      "selectMenu": "MuiSelect-selectMenu",
                    },
                    "displayEmpty": true,
                    "labelId": undefined,
                    "multiple": false,
                    "onClose": undefined,
                    "onOpen": undefined,
                    "open": undefined,
                    "renderValue": undefined,
                    "type": undefined,
                    "variant": "standard",
                  }
                }
                onChange={[Function]}
                value={1}
              >
                <WithStyles(ForwardRef(InputBase))
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root MuiInput-underline",
                      "underline": null,
                    }
                  }
                  fullWidth={false}
                  inputComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "IconComponent": [Function],
                        "MenuProps": [Function],
                        "SelectDisplayProps": [Function],
                        "autoFocus": [Function],
                        "autoWidth": [Function],
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "defaultValue": [Function],
                        "disabled": [Function],
                        "displayEmpty": [Function],
                        "inputRef": [Function],
                        "labelId": [Function],
                        "multiple": [Function],
                        "name": [Function],
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onClose": [Function],
                        "onFocus": [Function],
                        "onOpen": [Function],
                        "open": [Function],
                        "readOnly": [Function],
                        "renderValue": [Function],
                        "required": [Function],
                        "tabIndex": [Function],
                        "type": [Function],
                        "value": [Function],
                        "variant": [Function],
                      },
                      "render": [Function],
                    }
                  }
                  inputProps={
                    Object {
                      "IconComponent": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "displayName": "ArrowDropDownIcon",
                        "muiName": "SvgIcon",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "MenuProps": undefined,
                      "SelectDisplayProps": Object {
                        "id": undefined,
                      },
                      "autoWidth": false,
                      "children": Array [
                        <ForwardRef(WithStyles)
                          value=""
                        />,
                        Array [
                          <ForwardRef(WithStyles)
                            value={1}
                          >
                            Dropdown item 1
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="some"
                          >
                            Dropdown item 2
                          </ForwardRef(WithStyles)>,
                          <ForwardRef(WithStyles)
                            value="next"
                          >
                            
                          </ForwardRef(WithStyles)>,
                        ],
                      ],
                      "classes": Object {
                        "disabled": "Mui-disabled",
                        "filled": "MuiSelect-filled",
                        "icon": "MuiSelect-icon",
                        "iconFilled": "MuiSelect-iconFilled",
                        "iconOpen": "MuiSelect-iconOpen",
                        "iconOutlined": "MuiSelect-iconOutlined",
                        "outlined": "MuiSelect-outlined",
                        "root": "MuiSelect-root",
                        "select": "MuiSelect-select",
                        "selectMenu": "MuiSelect-selectMenu",
                      },
                      "displayEmpty": true,
                      "labelId": undefined,
                      "multiple": false,
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                      "variant": "standard",
                    }
                  }
                  multiline={false}
                  onChange={[Function]}
                  type="text"
                  value={1}
                >
                  <ForwardRef(InputBase)
                    classes={
                      Object {
                        "adornedEnd": "MuiInputBase-adornedEnd",
                        "adornedStart": "MuiInputBase-adornedStart",
                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                        "disabled": "Mui-disabled Mui-disabled",
                        "error": "Mui-error Mui-error",
                        "focused": "Mui-focused Mui-focused",
                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                        "input": "MuiInputBase-input MuiInput-input",
                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                      }
                    }
                    fullWidth={false}
                    inputComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "IconComponent": [Function],
                          "MenuProps": [Function],
                          "SelectDisplayProps": [Function],
                          "autoFocus": [Function],
                          "autoWidth": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "displayEmpty": [Function],
                          "inputRef": [Function],
                          "labelId": [Function],
                          "multiple": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onClose": [Function],
                          "onFocus": [Function],
                          "onOpen": [Function],
                          "open": [Function],
                          "readOnly": [Function],
                          "renderValue": [Function],
                          "required": [Function],
                          "tabIndex": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    inputProps={
                      Object {
                        "IconComponent": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "displayName": "ArrowDropDownIcon",
                          "muiName": "SvgIcon",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "MenuProps": undefined,
                        "SelectDisplayProps": Object {
                          "id": undefined,
                        },
                        "autoWidth": false,
                        "children": Array [
                          <ForwardRef(WithStyles)
                            value=""
                          />,
                          Array [
                            <ForwardRef(WithStyles)
                              value={1}
                            >
                              Dropdown item 1
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="some"
                            >
                              Dropdown item 2
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="next"
                            >
                              
                            </ForwardRef(WithStyles)>,
                          ],
                        ],
                        "classes": Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        },
                        "displayEmpty": true,
                        "labelId": undefined,
                        "multiple": false,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                        "variant": "standard",
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    type="text"
                    value={1}
                  >
                    <div
                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                      onClick={[Function]}
                    >
                      <ForwardRef(SelectInput)
                        IconComponent={
                          Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "ArrowDropDownIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          }
                        }
                        SelectDisplayProps={
                          Object {
                            "id": undefined,
                          }
                        }
                        aria-invalid={false}
                        autoWidth={false}
                        className="MuiInputBase-input MuiInput-input"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          }
                        }
                        disabled={false}
                        displayEmpty={true}
                        inputRef={[Function]}
                        multiple={false}
                        onAnimationStart={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        value={1}
                        variant="standard"
                      >
                        <div
                          aria-haspopup="listbox"
                          aria-labelledby=" "
                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          Dropdown item 1
                        </div>
                        <input
                          onAnimationStart={[Function]}
                          type="hidden"
                          value={1}
                        />
                        <ForwardRef
                          className="MuiSelect-icon"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="MuiSelect-icon"
                          >
                            <ForwardRef(SvgIcon)
                              className="MuiSelect-icon"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root MuiSelect-icon"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <WithStyles(ForwardRef(Menu))
                          MenuListProps={
                            Object {
                              "aria-labelledby": undefined,
                              "disableListWrap": true,
                              "role": "listbox",
                            }
                          }
                          PaperProps={
                            Object {
                              "style": Object {
                                "minWidth": undefined,
                              },
                            }
                          }
                          anchorEl={
                            <div
                              aria-haspopup="listbox"
                              aria-labelledby=" "
                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                              role="button"
                              tabindex="0"
                            >
                              Dropdown item 1
                            </div>
                          }
                          id="menu-"
                          onClose={[Function]}
                          open={false}
                        >
                          <ForwardRef(Menu)
                            MenuListProps={
                              Object {
                                "aria-labelledby": undefined,
                                "disableListWrap": true,
                                "role": "listbox",
                              }
                            }
                            PaperProps={
                              Object {
                                "style": Object {
                                  "minWidth": undefined,
                                },
                              }
                            }
                            anchorEl={
                              <div
                                aria-haspopup="listbox"
                                aria-labelledby=" "
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                role="button"
                                tabindex="0"
                              >
                                Dropdown item 1
                              </div>
                            }
                            classes={
                              Object {
                                "list": "MuiMenu-list",
                                "paper": "MuiMenu-paper",
                              }
                            }
                            id="menu-"
                            onClose={[Function]}
                            open={false}
                          >
                            <WithStyles(ForwardRef(Popover))
                              PaperProps={
                                Object {
                                  "classes": Object {
                                    "root": "MuiMenu-paper",
                                  },
                                  "style": Object {
                                    "minWidth": undefined,
                                  },
                                }
                              }
                              anchorEl={
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby=" "
                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                  role="button"
                                  tabindex="0"
                                >
                                  Dropdown item 1
                                </div>
                              }
                              anchorOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              getContentAnchorEl={[Function]}
                              id="menu-"
                              onClose={[Function]}
                              onEntering={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              transitionDuration="auto"
                            >
                              <ForwardRef(Popover)
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper",
                                    },
                                    "style": Object {
                                      "minWidth": undefined,
                                    },
                                  }
                                }
                                anchorEl={
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby=" "
                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                    role="button"
                                    tabindex="0"
                                  >
                                    Dropdown item 1
                                  </div>
                                }
                                anchorOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                classes={
                                  Object {
                                    "paper": "MuiPopover-paper",
                                    "root": "MuiPopover-root",
                                  }
                                }
                                getContentAnchorEl={[Function]}
                                id="menu-"
                                onClose={[Function]}
                                onEntering={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <ForwardRef(Modal)
                                  BackdropProps={
                                    Object {
                                      "invisible": true,
                                    }
                                  }
                                  className="MuiPopover-root"
                                  container={<body />}
                                  id="menu-"
                                  onClose={[Function]}
                                  open={false}
                                />
                              </ForwardRef(Popover)>
                            </WithStyles(ForwardRef(Popover))>
                          </ForwardRef(Menu)>
                        </WithStyles(ForwardRef(Menu))>
                      </ForwardRef(SelectInput)>
                    </div>
                  </ForwardRef(InputBase)>
                </WithStyles(ForwardRef(InputBase))>
              </ForwardRef(Input)>
            </WithStyles(ForwardRef(Input))>
          </ForwardRef(Select)>
        </WithStyles(ForwardRef(Select))>
        <WithStyles(ForwardRef(FormHelperText))
          error={true}
        >
          <ForwardRef(FormHelperText)
            classes={
              Object {
                "contained": "MuiFormHelperText-contained",
                "disabled": "Mui-disabled",
                "error": "Mui-error",
                "filled": "MuiFormHelperText-filled",
                "focused": "Mui-focused",
                "marginDense": "MuiFormHelperText-marginDense",
                "required": "Mui-required",
                "root": "MuiFormHelperText-root",
              }
            }
            error={true}
          >
            <p
              className="MuiFormHelperText-root Mui-error MuiFormHelperText-filled"
            >
              Helper text
            </p>
          </ForwardRef(FormHelperText)>
        </WithStyles(ForwardRef(FormHelperText))>
      </div>
    </ForwardRef(FormControl)>
  </WithStyles(ForwardRef(FormControl))>
</DropdownField>
`;
