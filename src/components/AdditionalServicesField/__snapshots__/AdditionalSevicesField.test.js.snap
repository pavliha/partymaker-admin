// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdditionalServicesField renders with minimal props 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#303f9f",
          "light": "#7986cb",
          "main": "#3f51b5",
        },
        "secondary": Object {
          "contrastText": "#fff",
          "dark": "#c51162",
          "light": "#ff4081",
          "main": "#f50057",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.167,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.2,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.167,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.235,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.334,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <WithStyles(undefined)
      name="additional_services"
      onChange={[Function]}
      value={
        Array [
          Object {
            "description": "Вмешает от 1 до 6 человек",
            "id": 1,
            "price": 100,
            "title": "Аренда беседок",
          },
          Object {
            "description": "Вмешает от 1 до 6 человек",
            "id": 2,
            "price": 100,
            "title": "Аренда беседок",
          },
        ]
      }
    >
      <Connect(AdditionalServicesField)
        classes={
          Object {
            "descriptionInput": "Connect(AdditionalServicesField)-descriptionInput-5",
            "iconButton": "Connect(AdditionalServicesField)-iconButton-3",
            "root": "Connect(AdditionalServicesField)-root-1",
            "table": "Connect(AdditionalServicesField)-table-2",
            "titleInput": "Connect(AdditionalServicesField)-titleInput-4",
          }
        }
        name="additional_services"
        onChange={[Function]}
        value={
          Array [
            Object {
              "description": "Вмешает от 1 до 6 человек",
              "id": 1,
              "price": 100,
              "title": "Аренда беседок",
            },
            Object {
              "description": "Вмешает от 1 до 6 человек",
              "id": 2,
              "price": 100,
              "title": "Аренда беседок",
            },
          ]
        }
      >
        <AdditionalServicesField
          classes={
            Object {
              "descriptionInput": "Connect(AdditionalServicesField)-descriptionInput-5",
              "iconButton": "Connect(AdditionalServicesField)-iconButton-3",
              "root": "Connect(AdditionalServicesField)-root-1",
              "table": "Connect(AdditionalServicesField)-table-2",
              "titleInput": "Connect(AdditionalServicesField)-titleInput-4",
            }
          }
          name="additional_services"
          onChange={[Function]}
          redux={
            Object {
              "remove": [Function],
            }
          }
          value={
            Array [
              Object {
                "description": "Вмешает от 1 до 6 человек",
                "id": 1,
                "price": 100,
                "title": "Аренда беседок",
              },
              Object {
                "description": "Вмешает от 1 до 6 человек",
                "id": 2,
                "price": 100,
                "title": "Аренда беседок",
              },
            ]
          }
        >
          <div
            className="Connect(AdditionalServicesField)-root-1"
          >
            <table
              className="Connect(AdditionalServicesField)-table-2"
            >
              <thead>
                <tr>
                  <th>
                    Услуга
                  </th>
                  <th>
                    Цена
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr
                  key="1"
                >
                  <td>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-titleInput-4"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Назавание услуги"
                      value="Аренда беседок"
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-titleInput-4"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Назавание услуги"
                        value="Аренда беседок"
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-titleInput-4"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Назавание услуги"
                          type="text"
                          value="Аренда беседок"
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-titleInput-4"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Назавание услуги"
                            type="text"
                            value="Аренда беседок"
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-titleInput-4 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Назавание услуги"
                                type="text"
                                value="Аренда беседок"
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-descriptionInput-5"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Описание услуги"
                      value="Вмешает от 1 до 6 человек"
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-descriptionInput-5"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Описание услуги"
                        value="Вмешает от 1 до 6 человек"
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-descriptionInput-5"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Описание услуги"
                          type="text"
                          value="Вмешает от 1 до 6 человек"
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-descriptionInput-5"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Описание услуги"
                            type="text"
                            value="Вмешает от 1 до 6 человек"
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-descriptionInput-5 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Описание услуги"
                                type="text"
                                value="Вмешает от 1 до 6 человек"
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                  </td>
                  <td>
                    <NumberField
                      InputProps={
                        Object {
                          "disableUnderline": true,
                        }
                      }
                      margin="normal"
                      onChange={[Function]}
                      placeholder="100 грн"
                      suffix=" грн"
                      value={100}
                    >
                      <NumberFormat
                        InputProps={
                          Object {
                            "disableUnderline": true,
                          }
                        }
                        allowEmptyFormatting={false}
                        allowLeadingZeros={false}
                        allowNegative={true}
                        customInput={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "FormHelperTextProps": [Function],
                                "InputLabelProps": [Function],
                                "InputProps": [Function],
                                "SelectProps": [Function],
                                "autoComplete": [Function],
                                "autoFocus": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "color": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "error": [Function],
                                "fullWidth": [Function],
                                "helperText": [Function],
                                "hiddenLabel": [Function],
                                "id": [Function],
                                "inputProps": [Function],
                                "inputRef": [Function],
                                "label": [Function],
                                "margin": [Function],
                                "multiline": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "placeholder": [Function],
                                "required": [Function],
                                "rows": [Function],
                                "rowsMax": [Function],
                                "select": [Function],
                                "size": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "defaultProps": undefined,
                            "displayName": "WithStyles(ForwardRef(TextField))",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiTextField",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        decimalSeparator="."
                        displayType="input"
                        fixedDecimalScale={false}
                        isAllowed={[Function]}
                        isNumericString={false}
                        margin="normal"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        onValueChange={[Function]}
                        placeholder="100 грн"
                        prefix=""
                        suffix=" грн"
                        thousandsGroupStyle="thousand"
                        type="text"
                        value={100}
                      >
                        <WithStyles(ForwardRef(TextField))
                          InputProps={
                            Object {
                              "disableUnderline": true,
                            }
                          }
                          margin="normal"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholder="100 грн"
                          type="text"
                          value="100 грн"
                        >
                          <ForwardRef(TextField)
                            InputProps={
                              Object {
                                "disableUnderline": true,
                              }
                            }
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            margin="normal"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            placeholder="100 грн"
                            type="text"
                            value="100 грн"
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              margin="normal"
                              onKeyDown={[Function]}
                              onMouseUp={[Function]}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                margin="normal"
                                onKeyDown={[Function]}
                                onMouseUp={[Function]}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                  onKeyDown={[Function]}
                                  onMouseUp={[Function]}
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    disableUnderline={true}
                                    fullWidth={false}
                                    multiline={false}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="100 грн"
                                    type="text"
                                    value="100 грн"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      disableUnderline={true}
                                      fullWidth={false}
                                      multiline={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="100 грн"
                                      type="text"
                                      value="100 грн"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        multiline={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="100 грн"
                                        type="text"
                                        value="100 грн"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          multiline={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="100 грн"
                                          type="text"
                                          value="100 грн"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="100 грн"
                                              required={false}
                                              type="text"
                                              value="100 грн"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </NumberFormat>
                    </NumberField>
                  </td>
                  <td>
                    <WithStyles(ForwardRef(IconButton))
                      className="Connect(AdditionalServicesField)-iconButton-3"
                      color="secondary"
                      onClick={[Function]}
                    >
                      <ForwardRef(IconButton)
                        className="Connect(AdditionalServicesField)-iconButton-3"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        color="secondary"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <button
                              className="MuiButtonBase-root MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <Memo(MinusCircleOutlineIcon)>
                                  <svg
                                    className="mdi-icon "
                                    fill="currentColor"
                                    height={24}
                                    viewBox="0 0 24 24"
                                    width={24}
                                  >
                                    <path
                                      d="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7"
                                    />
                                  </svg>
                                </Memo(MinusCircleOutlineIcon)>
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </td>
                </tr>
                <tr
                  key="2"
                >
                  <td>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-titleInput-4"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Назавание услуги"
                      value="Аренда беседок"
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-titleInput-4"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Назавание услуги"
                        value="Аренда беседок"
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-titleInput-4"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Назавание услуги"
                          type="text"
                          value="Аренда беседок"
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-titleInput-4"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Назавание услуги"
                            type="text"
                            value="Аренда беседок"
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-titleInput-4 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Назавание услуги"
                                type="text"
                                value="Аренда беседок"
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-descriptionInput-5"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Описание услуги"
                      value="Вмешает от 1 до 6 человек"
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-descriptionInput-5"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Описание услуги"
                        value="Вмешает от 1 до 6 человек"
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-descriptionInput-5"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Описание услуги"
                          type="text"
                          value="Вмешает от 1 до 6 человек"
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-descriptionInput-5"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Описание услуги"
                            type="text"
                            value="Вмешает от 1 до 6 человек"
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-descriptionInput-5 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Описание услуги"
                                type="text"
                                value="Вмешает от 1 до 6 человек"
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                  </td>
                  <td>
                    <NumberField
                      InputProps={
                        Object {
                          "disableUnderline": true,
                        }
                      }
                      margin="normal"
                      onChange={[Function]}
                      placeholder="100 грн"
                      suffix=" грн"
                      value={100}
                    >
                      <NumberFormat
                        InputProps={
                          Object {
                            "disableUnderline": true,
                          }
                        }
                        allowEmptyFormatting={false}
                        allowLeadingZeros={false}
                        allowNegative={true}
                        customInput={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "FormHelperTextProps": [Function],
                                "InputLabelProps": [Function],
                                "InputProps": [Function],
                                "SelectProps": [Function],
                                "autoComplete": [Function],
                                "autoFocus": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "color": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "error": [Function],
                                "fullWidth": [Function],
                                "helperText": [Function],
                                "hiddenLabel": [Function],
                                "id": [Function],
                                "inputProps": [Function],
                                "inputRef": [Function],
                                "label": [Function],
                                "margin": [Function],
                                "multiline": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "placeholder": [Function],
                                "required": [Function],
                                "rows": [Function],
                                "rowsMax": [Function],
                                "select": [Function],
                                "size": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "defaultProps": undefined,
                            "displayName": "WithStyles(ForwardRef(TextField))",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiTextField",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        decimalSeparator="."
                        displayType="input"
                        fixedDecimalScale={false}
                        isAllowed={[Function]}
                        isNumericString={false}
                        margin="normal"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        onValueChange={[Function]}
                        placeholder="100 грн"
                        prefix=""
                        suffix=" грн"
                        thousandsGroupStyle="thousand"
                        type="text"
                        value={100}
                      >
                        <WithStyles(ForwardRef(TextField))
                          InputProps={
                            Object {
                              "disableUnderline": true,
                            }
                          }
                          margin="normal"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholder="100 грн"
                          type="text"
                          value="100 грн"
                        >
                          <ForwardRef(TextField)
                            InputProps={
                              Object {
                                "disableUnderline": true,
                              }
                            }
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            margin="normal"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            placeholder="100 грн"
                            type="text"
                            value="100 грн"
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              margin="normal"
                              onKeyDown={[Function]}
                              onMouseUp={[Function]}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                margin="normal"
                                onKeyDown={[Function]}
                                onMouseUp={[Function]}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                  onKeyDown={[Function]}
                                  onMouseUp={[Function]}
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    disableUnderline={true}
                                    fullWidth={false}
                                    multiline={false}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="100 грн"
                                    type="text"
                                    value="100 грн"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      disableUnderline={true}
                                      fullWidth={false}
                                      multiline={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="100 грн"
                                      type="text"
                                      value="100 грн"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        multiline={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="100 грн"
                                        type="text"
                                        value="100 грн"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          multiline={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="100 грн"
                                          type="text"
                                          value="100 грн"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="100 грн"
                                              required={false}
                                              type="text"
                                              value="100 грн"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </NumberFormat>
                    </NumberField>
                  </td>
                  <td>
                    <WithStyles(ForwardRef(IconButton))
                      className="Connect(AdditionalServicesField)-iconButton-3"
                      color="secondary"
                      onClick={[Function]}
                    >
                      <ForwardRef(IconButton)
                        className="Connect(AdditionalServicesField)-iconButton-3"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        color="secondary"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <button
                              className="MuiButtonBase-root MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <Memo(MinusCircleOutlineIcon)>
                                  <svg
                                    className="mdi-icon "
                                    fill="currentColor"
                                    height={24}
                                    viewBox="0 0 24 24"
                                    width={24}
                                  >
                                    <path
                                      d="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7"
                                    />
                                  </svg>
                                </Memo(MinusCircleOutlineIcon)>
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </td>
                </tr>
                <tr>
                  <td>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-titleInput-4"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Назавание услуги"
                      value=""
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-titleInput-4"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Назавание услуги"
                        value=""
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-titleInput-4"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Назавание услуги"
                          type="text"
                          value=""
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-titleInput-4"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Назавание услуги"
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-titleInput-4 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Назавание услуги"
                                type="text"
                                value=""
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                    <WithStyles(ForwardRef(Input))
                      className="Connect(AdditionalServicesField)-descriptionInput-5"
                      disableUnderline={true}
                      fullWidth={true}
                      onChange={[Function]}
                      placeholder="Описание услуги"
                      value=""
                    >
                      <ForwardRef(Input)
                        className="Connect(AdditionalServicesField)-descriptionInput-5"
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root",
                            "underline": "MuiInput-underline",
                          }
                        }
                        disableUnderline={true}
                        fullWidth={true}
                        onChange={[Function]}
                        placeholder="Описание услуги"
                        value=""
                      >
                        <WithStyles(ForwardRef(InputBase))
                          className="Connect(AdditionalServicesField)-descriptionInput-5"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": null,
                            }
                          }
                          fullWidth={true}
                          inputComponent="input"
                          multiline={false}
                          onChange={[Function]}
                          placeholder="Описание услуги"
                          type="text"
                          value=""
                        >
                          <ForwardRef(InputBase)
                            className="Connect(AdditionalServicesField)-descriptionInput-5"
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                "input": "MuiInputBase-input MuiInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                "root": "MuiInputBase-root MuiInput-root",
                              }
                            }
                            fullWidth={true}
                            inputComponent="input"
                            multiline={false}
                            onChange={[Function]}
                            placeholder="Описание услуги"
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root MuiInput-root Connect(AdditionalServicesField)-descriptionInput-5 MuiInputBase-fullWidth MuiInput-fullWidth"
                              onClick={[Function]}
                            >
                              <input
                                className="MuiInputBase-input MuiInput-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Описание услуги"
                                type="text"
                                value=""
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(Input)>
                    </WithStyles(ForwardRef(Input))>
                  </td>
                  <td
                    width="100px"
                  >
                    <NumberField
                      InputProps={
                        Object {
                          "disableUnderline": true,
                        }
                      }
                      onChange={[Function]}
                      placeholder="100 грн"
                      suffix=" грн"
                      value={null}
                    >
                      <NumberFormat
                        InputProps={
                          Object {
                            "disableUnderline": true,
                          }
                        }
                        allowEmptyFormatting={false}
                        allowLeadingZeros={false}
                        allowNegative={true}
                        customInput={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "FormHelperTextProps": [Function],
                                "InputLabelProps": [Function],
                                "InputProps": [Function],
                                "SelectProps": [Function],
                                "autoComplete": [Function],
                                "autoFocus": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "color": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "error": [Function],
                                "fullWidth": [Function],
                                "helperText": [Function],
                                "hiddenLabel": [Function],
                                "id": [Function],
                                "inputProps": [Function],
                                "inputRef": [Function],
                                "label": [Function],
                                "margin": [Function],
                                "multiline": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "placeholder": [Function],
                                "required": [Function],
                                "rows": [Function],
                                "rowsMax": [Function],
                                "select": [Function],
                                "size": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "defaultProps": undefined,
                            "displayName": "WithStyles(ForwardRef(TextField))",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiTextField",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        decimalSeparator="."
                        displayType="input"
                        fixedDecimalScale={false}
                        isAllowed={[Function]}
                        isNumericString={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        onValueChange={[Function]}
                        placeholder="100 грн"
                        prefix=""
                        suffix=" грн"
                        thousandsGroupStyle="thousand"
                        type="text"
                        value={null}
                      >
                        <WithStyles(ForwardRef(TextField))
                          InputProps={
                            Object {
                              "disableUnderline": true,
                            }
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholder="100 грн"
                          type="text"
                          value=""
                        >
                          <ForwardRef(TextField)
                            InputProps={
                              Object {
                                "disableUnderline": true,
                              }
                            }
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            placeholder="100 грн"
                            type="text"
                            value=""
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              onKeyDown={[Function]}
                              onMouseUp={[Function]}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                onKeyDown={[Function]}
                                onMouseUp={[Function]}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root"
                                  onKeyDown={[Function]}
                                  onMouseUp={[Function]}
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    disableUnderline={true}
                                    fullWidth={false}
                                    multiline={false}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="100 грн"
                                    type="text"
                                    value=""
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      disableUnderline={true}
                                      fullWidth={false}
                                      multiline={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="100 грн"
                                      type="text"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        multiline={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="100 грн"
                                        type="text"
                                        value=""
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          multiline={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="100 грн"
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="100 грн"
                                              required={false}
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </NumberFormat>
                    </NumberField>
                  </td>
                  <td
                    width="25px"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      className="Connect(AdditionalServicesField)-iconButton-3"
                      color="secondary"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <ForwardRef(IconButton)
                        className="Connect(AdditionalServicesField)-iconButton-3"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        color="secondary"
                        disabled={true}
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary Mui-disabled"
                          disabled={true}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary Mui-disabled"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={true}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <button
                              className="MuiButtonBase-root MuiIconButton-root Connect(AdditionalServicesField)-iconButton-3 MuiIconButton-colorSecondary Mui-disabled Mui-disabled"
                              disabled={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={-1}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <Memo(AddCircleOutlineIcon)>
                                  <svg
                                    className="mdi-icon "
                                    fill="currentColor"
                                    height={24}
                                    viewBox="0 0 24 24"
                                    width={24}
                                  >
                                    <path
                                      d="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z"
                                    />
                                  </svg>
                                </Memo(AddCircleOutlineIcon)>
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </td>
                </tr>
              </tbody>
            </table>
            <WithStyles(ForwardRef(FormHelperText))>
              <ForwardRef(FormHelperText)
                classes={
                  Object {
                    "contained": "MuiFormHelperText-contained",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "filled": "MuiFormHelperText-filled",
                    "focused": "Mui-focused",
                    "marginDense": "MuiFormHelperText-marginDense",
                    "required": "Mui-required",
                    "root": "MuiFormHelperText-root",
                  }
                }
              >
                <p
                  className="MuiFormHelperText-root"
                />
              </ForwardRef(FormHelperText)>
            </WithStyles(ForwardRef(FormHelperText))>
          </div>
        </AdditionalServicesField>
      </Connect(AdditionalServicesField)>
    </WithStyles(undefined)>
  </Provider>
</ThemeProvider>
`;
